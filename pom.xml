<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ars</groupId>
	<artifactId>service-discovery</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>service-discovery</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<maven.version>3.8.5</maven.version>
		<java.version>17</java.version>
		<spring-boot.version>3.1.5</spring-boot.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<profiles.active>dev</profiles.active>
		<main-start-class>com.ars.eureka.EurekaServerApplication</main-start-class>
		<spring-cloud.version>2022.0.4</spring-cloud.version>

		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.clean-plugin.version>3.3.2</maven.clean-plugin.version>
		<maven.spotless-plugin.version>2.40.0</maven.spotless-plugin.version>
		<maven.enforcer-plugin.version>3.4.1</maven.enforcer-plugin.version>
		<maven.compiler-plugin.version>3.12.0</maven.compiler-plugin.version>
		<maven.resources-plugin.version>3.3.1</maven.resources-plugin.version>
		<maven.surefire-plugin.version>3.2.5</maven.surefire-plugin.version>
	</properties>

	<dependencies>
		<!-- Eureka Server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<!-- Actuator for monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.xmlunit</groupId>
					<artifactId>xmlunit-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.jayway.jsonpath</groupId>
					<artifactId>json-path</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<defaultGoal>spring-boot:run</defaultGoal>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<!-- Declare default configuration for plugins in the project -->
		<pluginManagement>
			<plugins>
				<!-- Auto format code -->
				<plugin>
					<groupId>com.diffplug.spotless</groupId>
					<artifactId>spotless-maven-plugin</artifactId>
					<version>${maven.spotless-plugin.version}</version>
					<configuration>
						<java>
							<removeUnusedImports/>
							<trimTrailingWhitespace/>
							<endWithNewline/>
						</java>
					</configuration>
					<executions>
						<execution>
							<id>spotless</id>
							<phase>process-sources</phase>
							<goals>
								<goal>apply</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Config build rules -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer-plugin.version}</version>

					<executions>
						<!-- Execute main rules (Java version, Maven version) -->
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>

						<!-- Check if dependencies are pulled in multiple versions (dependency convergence) -->
						<execution>
							<id>enforce-dependencyConvergence</id>
							<configuration>
								<rules>
									<DependencyConvergence/>
								</rules>

								<!-- Don't fail build, just warn if there is an error -->
								<fail>false</fail>
							</configuration>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>

					<configuration>
						<rules>
							<!-- Required minimum Maven is the specified version -->
							<requireMavenVersion>
								<message>You are running an older version. Requires at least Maven ${maven.version}</message>
								<version>[${maven.version},)</version>
							</requireMavenVersion>

							<!-- Only allow building with JDK 17 or 21 -->
							<requireJavaVersion>
								<message>You are running an incompatible version of Java. Supports JDK 17 or 21</message>
								<version>[17,18),[21,22)</version>
							</requireJavaVersion>
						</rules>
					</configuration>
				</plugin>

				<!-- Compiler config -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerArgument>-parameters</compilerArgument>
						<annotationProcessorPaths>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring-boot.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>

				<!-- Config handle resources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources-plugin.version}</version>
					<executions>
						<execution>
							<!-- Executed in the validate phase, very early in the build process -->
							<id>config-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>

							<configuration>
								<!-- Destination directory, usually where Spring Boot reads resources -->
								<outputDirectory>${project.build.directory}/classes</outputDirectory>
								<!-- Turn off default separator (${...}, @...@) -->
								<useDefaultDelimiters>false</useDefaultDelimiters>
								<!-- Specify the delimiter as #...# (avoid conflict with Spring's ${...}) -->
								<delimiters>
									<delimiter>#</delimiter>
								</delimiters>

								<!-- Resource configuration to be copied -->
								<resources>
									<resource>
										<!-- Source directory -->
										<directory>src/main/resources/</directory>
										<!-- Enable variable filtering in files -->
										<filtering>true</filtering>
										<!-- Only copy .yml files in config directory -->
										<includes>
											<include>config/*.yml</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Build JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${main-start-class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Clean old target build -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean-plugin.version}</version>
			</plugin>

			<!-- Auto format code -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
			</plugin>

			<!-- Config build rules -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- Compiler config -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<!-- Config handle resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>

			<!-- Config run test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire-plugin.version}</version>
				<configuration>
					<skipTests>true</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
